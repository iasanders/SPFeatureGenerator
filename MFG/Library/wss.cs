//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=1.1.4322.2407.
// 
using System.Xml.Serialization;



/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlRootAttribute("Feature", Namespace="http://schemas.microsoft.com/sharepoint/", IsNullable=false)]
public class FeatureDefinition {
    
    /// <remarks/>
    public ElementManifestReferences ElementManifests;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Property", IsNullable=false)]
    public FeaturePropertyDefinition[] Properties;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ActivationDependency", IsNullable=false)]
    public FeatureActivationDependencyDefinition[] ActivationDependencies;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Version;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FeatureScope Scope;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ReceiverAssembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ReceiverClass;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Creator;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DefaultResourceFile;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SolutionId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ActivateOnDefault;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ActivateOnDefaultSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoActivateInCentralAdmin;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoActivateInCentralAdminSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AlwaysForceInstall;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AlwaysForceInstallSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RequireResources;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RequireResourcesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ImageUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ImageUrlAltText;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ElementManifestReferences {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ElementFile", typeof(ElementManifestReference))]
    [System.Xml.Serialization.XmlElementAttribute("ElementManifest", typeof(ElementManifestReference))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public ElementManifestReference[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType[] ItemsElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ElementManifestReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FeatureActivationDependencyDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FeatureId;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FeaturePropertyDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Key;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/", IncludeInSchema=false)]
public enum ItemsChoiceType {
    
    /// <remarks/>
    ElementFile,
    
    /// <remarks/>
    ElementManifest,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum FeatureScope {
    
    /// <remarks/>
    Farm,
    
    /// <remarks/>
    WebApplication,
    
    /// <remarks/>
    Site,
    
    /// <remarks/>
    Web,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum TRUEFALSE {
    
    /// <remarks/>
    TRUE,
    
    /// <remarks/>
    FALSE,
    
    /// <remarks/>
    True,
    
    /// <remarks/>
    False,
    
    /// <remarks/>
    @true,
    
    /// <remarks/>
    @false,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlRootAttribute("Elements", Namespace="http://schemas.microsoft.com/sharepoint/", IsNullable=false)]
public class ElementDefinitionCollection {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FeatureSiteTemplateAssociation", typeof(FeatureSiteTemplateAssociationDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Control", typeof(DelegateControlDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("CustomAction", typeof(CustomActionDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Workflow", typeof(WorkflowDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Field", typeof(SharedFieldDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("DocumentConverter", typeof(DocumentConverterDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ListTemplate", typeof(ListTemplateDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ContentTypeBinding", typeof(ContentTypeBindingDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Receivers", typeof(ReceiverDefinitionCollection))]
    [System.Xml.Serialization.XmlElementAttribute("HideCustomAction", typeof(HideCustomActionDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("UserMigrator", typeof(UserMigratorDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Module", typeof(ModuleDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ContentType", typeof(ContentTypeDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ListInstance", typeof(ListInstanceDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("CustomActionGroup", typeof(CustomActionGroupDefinition))]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FeatureSiteTemplateAssociationDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Property")]
    public FeaturePropertyDefinition[] Property;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TemplateName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class DelegateControlDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Property")]
    public SimplePropertyDefinition[] Property;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SequenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ControlAssembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ControlClass;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ControlSrc;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SimplePropertyDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CustomActionDefinition {
    
    /// <remarks/>
    public UrlActionDefinition UrlAction;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ControlAssembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ControlClass;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ControlSrc;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string GroupId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ImageUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public CustomActionRegistrationType RegistrationType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RegistrationTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RegistrationId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RequireSiteAdministrator;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RequireSiteAdministratorSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Rights;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SequenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInLists;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInListsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInReadOnlyContentTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInReadOnlyContentTypesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInSealedContentTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInSealedContentTypesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class UrlActionDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum CustomActionRegistrationType {
    
    /// <remarks/>
    List,
    
    /// <remarks/>
    ContentType,
    
    /// <remarks/>
    FileType,
    
    /// <remarks/>
    ProgId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class WorkflowDefinition {
    
    /// <remarks/>
    public object AssociationData;
    
    /// <remarks/>
    public object MetaData;
    
    /// <remarks/>
    public object Categories;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CodeBesideAssembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CodeBesideClass;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EngineClass;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EngineAssembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AssociationUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string InstantiationUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ModificationUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string StatusUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TaskListContentTypeId;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SharedFieldDefinition : FieldDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("ID")]
    public string ID1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("Group")]
    public string Group1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("MaxLength")]
    public int MaxLength1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxLength1Specified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("SourceID")]
    public string SourceID1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("StaticName")]
    public string StaticName1;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
//[System.Xml.Serialization.XmlIncludeAttribute(typeof(SharedFieldDefinition))]
//[System.Xml.Serialization.XmlIncludeAttribute(typeof(SharedFieldReference))]
public class FieldDefinition {
    
    /// <remarks/>
    //public FieldRefDefinitions FieldRefs;
    
    /// <remarks/>
    //public CamlViewRoot DisplayPattern;
    
    /// <remarks/>
    //public CamlViewRoot DisplayBidiPattern;
    
    /// <remarks/>
    public CHOICEDEFINITIONS CHOICES;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MAPPING", IsNullable=false)]
    public MAPPINGDEFINITION[] MAPPINGS;
    
    /// <remarks/>
    public string Default;
    
    /// <remarks/>
    public string Formula;
    
    /// <remarks/>
    public string DefaultFormula;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AllowDeletion;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowDeletionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AllowHyperlink;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowHyperlinkSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AllowMultiVote;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowMultiVoteSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AppendOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AppendOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AuthoringInfo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string BaseType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int CalType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CalTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE CanToggleHidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CanToggleHiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ClassInfo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ColName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Commas;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CommasSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Decimals;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DecimalsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Dir;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayImage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayNameSrcField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int DisplaySize;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DisplaySizeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Div;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE EnableLookup;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableLookupSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ExceptionImage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FieldRef;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FillInChoice;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FillInChoiceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Filterable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FilterableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FilterableNoRecurrence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FilterableNoRecurrenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ForcedDisplay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DisplayFormat Format;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FormatSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FromBaseType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FromBaseTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string HeaderImage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Height;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HeightSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public IMEMode IMEMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IMEModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Indexed;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IndexedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE IsolateStyles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsolateStylesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string JoinColName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public JoinType JoinType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool JoinTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string LCID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string List;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.Single Max;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Min;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Mult;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MultSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string NegativeFormat;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Node;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE NoEditFormBreak;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NoEditFormBreakSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int NumLines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NumLinesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Percentage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PercentageSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PIAttribute;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PITarget;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PrimaryPIAttribute;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PrimaryPITarget;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Presence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PresenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE PrimaryKey;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PrimaryKeySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnlyEnforced;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlyEnforcedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RenderXMLUsingPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RenderXMLUsingPatternSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Required;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RestrictedMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RestrictedModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ResultType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RichTextMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RichText;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RichTextSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Sealed;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SealedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE SeperateLine;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SeperateLineSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SetAs;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowAddressBookButton;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowAddressBookButtonSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ShowField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInDisplayForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInDisplayFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInEditForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInEditFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInFileDlg;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInFileDlgSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInListSettings;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInListSettingsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInNewForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInNewFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInViewForms;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInViewFormsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Sortable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SortableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string StorageTZ;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string StripWS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE SuppressNameDisplay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SuppressNameDisplaySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE TextOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TextOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string UniqueId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE UnlimitedLengthInDocumentLibrary;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UnlimitedLengthInDocumentLibrarySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncodeAsURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeAsURLSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Viewable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ViewableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE WikiLinking;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WikiLinkingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Width;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WidthSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string XName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Group;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int MaxLength;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxLengthSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SourceID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string StaticName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int JoinRowOrdinal;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool JoinRowOrdinalSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RowOrdinal;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RowOrdinalSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInVersionHistory;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInVersionHistorySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE PrependId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PrependIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DisplaceOnUpgrade;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DisplaceOnUpgradeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FieldRefDefinitions {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FieldRef")]
    public FieldRefDefinition[] FieldRef;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FieldRefDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Alias;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Ascending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AscendingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CreateURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Explicit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ExplicitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Key;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RefType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ShowField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE TextOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TextOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ReferenceType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum ReferenceType {
    
    /// <remarks/>
    AVG,
    
    /// <remarks/>
    COUNT,
    
    /// <remarks/>
    MAX,
    
    /// <remarks/>
    MIN,
    
    /// <remarks/>
    SUM,
    
    /// <remarks/>
    STDEV,
    
    /// <remarks/>
    VAR,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ToolbarDefinition))]
public class CamlViewRoot : CamlViewElement {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ForEachElement))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptQuoteDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IfNewDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CaseDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SetVarDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CamlViewRoot))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ToolbarDefinition))]
public class CamlViewElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Length", typeof(object))]
    [System.Xml.Serialization.XmlElementAttribute("FilterLink", typeof(FilterLinkDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ListUrlDir", typeof(HttpPathDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ListProperty", typeof(ListPropertyDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IfEqual", typeof(IfEqualDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Identity", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("Switch", typeof(SwitchDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("UserID", typeof(UserIDDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("SelectionOptions", typeof(SelectOptionsDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ThreadStamp", typeof(ThreadStampDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("FieldProperty", typeof(FieldPropertyDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("FieldPrefix", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("UrlDirName", typeof(object))]
    [System.Xml.Serialization.XmlElementAttribute("FieldSortParams", typeof(HtmlRenderingElement))]
    [System.Xml.Serialization.XmlElementAttribute("ProjectProperty", typeof(ProjectPropertyDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ScriptQuote", typeof(ScriptQuoteDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("GetFileExtension", typeof(object))]
    [System.Xml.Serialization.XmlElementAttribute("Property", typeof(FieldPropertyDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("HTML", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("IfHasRights", typeof(IfHasRightsDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("MapToControl", typeof(CamlViewElement))]
    [System.Xml.Serialization.XmlElementAttribute("GetVar", typeof(GetVarDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("UrlBaseName", typeof(UrlBaseNameDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IfNeg", typeof(IfNegDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ContentTypes", typeof(CamlViewElement))]
    [System.Xml.Serialization.XmlElementAttribute("Counter", typeof(CounterDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ID", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("URL", typeof(URLDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("HttpPath", typeof(HttpPathDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("MapToAll", typeof(CamlViewElement))]
    [System.Xml.Serialization.XmlElementAttribute("HttpHost", typeof(HttpHostDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("PageUrl", typeof(HtmlRenderingElement))]
    [System.Xml.Serialization.XmlElementAttribute("IfNew", typeof(IfNewDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("SetVar", typeof(SetVarDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("WebQueryInfo", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("ListUrl", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("Limit", typeof(LimitDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Column2", typeof(QueryColumnDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("MeetingProperty", typeof(MeetingPropertyDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IfSubString", typeof(IfSubStringDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("MapToIcon", typeof(CamlViewElement))]
    [System.Xml.Serialization.XmlElementAttribute("Fields", typeof(CamlViewElement))]
    [System.Xml.Serialization.XmlElementAttribute("CurrentRights", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("FieldSwitch", typeof(SwitchDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Field", typeof(FieldViewReferenceDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Column", typeof(QueryColumnDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("LookupColumn", typeof(LookupColumnDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("List", typeof(EmptyElement))]
    [System.Xml.Serialization.XmlElementAttribute("ForEach", typeof(ForEachElement))]
    [System.Xml.Serialization.XmlElementAttribute("HttpVDir", typeof(HttpVDirDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("ServerProperty", typeof(ServerPropertyDefinition))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType4[] ItemsElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FilterLinkDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("Default")]
    public string Default1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Paged;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PagedSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FilterLinkDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPropertyDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LimitDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectPropertyDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MeetingPropertyDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetVarDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FieldPropertyDefinition))]
public class HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoHyperLink;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoHyperLinkSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoNewLine;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoNewLineSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string URLEncodeAsURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE StripWS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StripWSSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ExpandXML;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ExpandXMLSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoHyperLinkNoEncoding;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoHyperLinkNoEncodingSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListPropertyDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Select;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ForInstance;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ForInstanceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class LimitDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    public object Text;
    
    /// <remarks/>
    public object More;
    
    /// <remarks/>
    public ColumnDefinition Column;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE IgnoreTags;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IgnoreTagsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Len;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string MoreText;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ColumnDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ProjectPropertyDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Select;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class MeetingPropertyDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Select;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class GetVarDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FieldPropertyDefinition : HtmlRenderingElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Select;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("HTMLEncode")]
    public TRUEFALSE HTMLEncode1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncode1Specified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class HttpPathDefinition : EmptyElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ServerRel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ServerRelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncodeAsURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeAsURLSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ForInstance;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ForInstanceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HttpPathDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HttpVDirDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UserIDDefinition))]
public class EmptyElement {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class HttpVDirDefinition : EmptyElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE CurrentWeb;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CurrentWebSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class UserIDDefinition : EmptyElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AllowAnonymous;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowAnonymousSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class IfEqualDefinition {
    
    /// <remarks/>
    public CamlQueryRoot Expr1;
    
    /// <remarks/>
    public CamlQueryRoot Expr2;
    
    /// <remarks/>
    public CamlViewRoot Then;
    
    /// <remarks/>
    public CamlViewRoot Else;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CamlQueryRoot {
    
    /// <remarks/>
    public LogicalJoinDefinition Where;
    
    /// <remarks/>
    public FieldRefDefinitions OrderBy;
    
    /// <remarks/>
    public LogicalTestDefinition Eq;
    
    /// <remarks/>
    public SimpleFieldRef Field;
    
    /// <remarks/>
    public ListPropertyDefinition ListProperty;
    
    /// <remarks/>
    public LookupColumnDefinition LookupColumn;
    
    /// <remarks/>
    public QueryColumnDefinition Column;
    
    /// <remarks/>
    public QueryGetVarDefinition GetVar;
    
    /// <remarks/>
    public GroupByDefinition GroupBy;
    
    /// <remarks/>
    public LogicalTestDefinition Contains;
    
    /// <remarks/>
    public LogicalTestDefinition BeginsWith;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class LogicalJoinDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Lt", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Contains", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("DateRangesOverlap", typeof(UnlimitedLogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Leq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("And", typeof(ExtendedLogicalJoinDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Membership", typeof(MembershipDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Neq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Eq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("BeginsWith", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Geq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IsNotNull", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Or", typeof(ExtendedLogicalJoinDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IsNull", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Gt", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType3[] ItemsElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupByDefinition))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MembershipDefinition))]
public class LogicalTestDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FieldRef", typeof(FieldRefDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Value", typeof(ValueDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("XML", typeof(string))]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ValueDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class GroupByDefinition : LogicalTestDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Collapse;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CollapseSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class MembershipDefinition : LogicalTestDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class UnlimitedLogicalTestDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FieldRef", typeof(FieldRefDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Value", typeof(ValueDefinition))]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ExtendedLogicalJoinDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Lt", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Contains", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("DateRangesOverlap", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Leq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("And", typeof(ExtendedLogicalJoinDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Membership", typeof(MembershipDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Neq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Eq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("BeginsWith", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Geq", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IsNotNull", typeof(LogicalNullDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Or", typeof(ExtendedLogicalJoinDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("IsNull", typeof(LogicalNullDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Gt", typeof(LogicalTestDefinition))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType2[] ItemsElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class LogicalNullDefinition {
    
    /// <remarks/>
    public FieldRefDefinition FieldRef;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/", IncludeInSchema=false)]
public enum ItemsChoiceType2 {
    
    /// <remarks/>
    Lt,
    
    /// <remarks/>
    Contains,
    
    /// <remarks/>
    DateRangesOverlap,
    
    /// <remarks/>
    Leq,
    
    /// <remarks/>
    And,
    
    /// <remarks/>
    Membership,
    
    /// <remarks/>
    Neq,
    
    /// <remarks/>
    Eq,
    
    /// <remarks/>
    BeginsWith,
    
    /// <remarks/>
    Geq,
    
    /// <remarks/>
    IsNotNull,
    
    /// <remarks/>
    Or,
    
    /// <remarks/>
    IsNull,
    
    /// <remarks/>
    Gt,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/", IncludeInSchema=false)]
public enum ItemsChoiceType3 {
    
    /// <remarks/>
    Lt,
    
    /// <remarks/>
    Contains,
    
    /// <remarks/>
    DateRangesOverlap,
    
    /// <remarks/>
    Leq,
    
    /// <remarks/>
    And,
    
    /// <remarks/>
    Membership,
    
    /// <remarks/>
    Neq,
    
    /// <remarks/>
    Eq,
    
    /// <remarks/>
    BeginsWith,
    
    /// <remarks/>
    Geq,
    
    /// <remarks/>
    IsNotNull,
    
    /// <remarks/>
    Or,
    
    /// <remarks/>
    IsNull,
    
    /// <remarks/>
    Gt,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SimpleFieldRef {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QueryColumnDefinition))]
public class LookupColumnDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE StripWS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StripWSSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ShowField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncodeAsURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeAsURLSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class QueryColumnDefinition : LookupColumnDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class QueryGetVarDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SwitchDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Default", typeof(CamlViewElement))]
    [System.Xml.Serialization.XmlElementAttribute("Case", typeof(CaseDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Expr", typeof(ExprDefinition))]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TrueFalseMixed StripWS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StripWSSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CaseDefinition : CamlViewElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ExprDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum TrueFalseMixed {
    
    /// <remarks/>
    True,
    
    /// <remarks/>
    False,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SelectOptionsDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Len;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string BlankPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string MoreText;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ThreadStampDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE StripWS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StripWSSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ScriptQuoteDefinition : CamlViewElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE NotAddingQuote;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NotAddingQuoteSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class IfHasRightsDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("RightsGroup", IsNullable=false)]
    public RightsGroupDefinition[] RightsChoices;
    
    /// <remarks/>
    public CamlViewElement Then;
    
    /// <remarks/>
    public CamlViewElement Else;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class RightsGroupDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PermissionState PermAddListItems;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PermAddListItemsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PermissionState PermEditListItems;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PermEditListItemsSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum PermissionState {
    
    /// <remarks/>
    required,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class UrlBaseNameDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LookupColumn", typeof(LookupColumnDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Field", typeof(object))]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncodeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class IfNegDefinition {
    
    /// <remarks/>
    public CamlQueryRoot Expr1;
    
    /// <remarks/>
    public CamlQueryRoot Expr2;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CounterDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public CounterType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum CounterType {
    
    /// <remarks/>
    View,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class URLDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Cmd;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE NoID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NoIDSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class HttpHostDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncodeAsURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeAsURLSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class IfNewDefinition : CamlViewElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SetVarDefinition : CamlViewElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public RequestParameter Scope;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ScopeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum RequestParameter {
    
    /// <remarks/>
    Request,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class IfSubStringDefinition {
    
    /// <remarks/>
    public CamlQueryRoot Expr1;
    
    /// <remarks/>
    public CamlQueryRoot Expr2;
    
    /// <remarks/>
    public CamlViewRoot Then;
    
    /// <remarks/>
    public CamlViewRoot Else;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FieldViewReferenceDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoHyperLink;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoHyperLinkSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoHyperLinkNoEncoding;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoHyperLinkNoEncodingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AutoNewLine;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AutoNewLineSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE StripWS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StripWSSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncodeAsURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeAsURLSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HTMLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HTMLEncodeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ForEachElement : CamlViewElement {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Select;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ServerPropertyDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Column")]
    public QueryColumnDefinition[] Column;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Select;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/", IncludeInSchema=false)]
public enum ItemsChoiceType4 {
    
    /// <remarks/>
    Length,
    
    /// <remarks/>
    FilterLink,
    
    /// <remarks/>
    ListUrlDir,
    
    /// <remarks/>
    ListProperty,
    
    /// <remarks/>
    IfEqual,
    
    /// <remarks/>
    Identity,
    
    /// <remarks/>
    Switch,
    
    /// <remarks/>
    UserID,
    
    /// <remarks/>
    SelectionOptions,
    
    /// <remarks/>
    ThreadStamp,
    
    /// <remarks/>
    FieldProperty,
    
    /// <remarks/>
    FieldPrefix,
    
    /// <remarks/>
    UrlDirName,
    
    /// <remarks/>
    FieldSortParams,
    
    /// <remarks/>
    ProjectProperty,
    
    /// <remarks/>
    ScriptQuote,
    
    /// <remarks/>
    GetFileExtension,
    
    /// <remarks/>
    Property,
    
    /// <remarks/>
    HTML,
    
    /// <remarks/>
    IfHasRights,
    
    /// <remarks/>
    MapToControl,
    
    /// <remarks/>
    GetVar,
    
    /// <remarks/>
    UrlBaseName,
    
    /// <remarks/>
    IfNeg,
    
    /// <remarks/>
    ContentTypes,
    
    /// <remarks/>
    Counter,
    
    /// <remarks/>
    ID,
    
    /// <remarks/>
    URL,
    
    /// <remarks/>
    HttpPath,
    
    /// <remarks/>
    MapToAll,
    
    /// <remarks/>
    HttpHost,
    
    /// <remarks/>
    PageUrl,
    
    /// <remarks/>
    IfNew,
    
    /// <remarks/>
    SetVar,
    
    /// <remarks/>
    WebQueryInfo,
    
    /// <remarks/>
    ListUrl,
    
    /// <remarks/>
    Limit,
    
    /// <remarks/>
    Column2,
    
    /// <remarks/>
    MeetingProperty,
    
    /// <remarks/>
    IfSubString,
    
    /// <remarks/>
    MapToIcon,
    
    /// <remarks/>
    Fields,
    
    /// <remarks/>
    CurrentRights,
    
    /// <remarks/>
    FieldSwitch,
    
    /// <remarks/>
    Field,
    
    /// <remarks/>
    Column,
    
    /// <remarks/>
    LookupColumn,
    
    /// <remarks/>
    List,
    
    /// <remarks/>
    ForEach,
    
    /// <remarks/>
    HttpVDir,
    
    /// <remarks/>
    ServerProperty,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ToolbarDefinition : CamlViewRoot {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ToolbarPosition Position;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PositionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ToolbarType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum ToolbarPosition {
    
    /// <remarks/>
    After,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum ToolbarType {
    
    /// <remarks/>
    Standard,
    
    /// <remarks/>
    FreeForm,
    
    /// <remarks/>
    RelatedTasks,
    
    /// <remarks/>
    Freeform,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CHOICEDEFINITIONS {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CHOICE")]
    public string[] CHOICE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class MAPPINGDEFINITION {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value1;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum DisplayFormat {
    
    /// <remarks/>
    DateOnly,
    
    /// <remarks/>
    DateTime,
    
    /// <remarks/>
    EventList,
    
    /// <remarks/>
    ISO8601,
    
    /// <remarks/>
    ISO8601Basic,
    
    /// <remarks/>
    ISO8601Gregorian,
    
    /// <remarks/>
    Dropdown,
    
    /// <remarks/>
    RadioButtons,
    
    /// <remarks/>
    Hyperlink,
    
    /// <remarks/>
    Image,
    
    /// <remarks/>
    TRUE,
    
    /// <remarks/>
    FALSE,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum IMEMode {
    
    /// <remarks/>
    inactive,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum JoinType {
    
    /// <remarks/>
    INNER,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("LEFT OUTER")]
    LEFTOUTER,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("RIGHT OUTER")]
    RIGHTOUTER,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SharedFieldReference : FieldDefinition {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class DocumentConverterDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string App;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string From;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string To;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ConverterUIPage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ConverterSpecificSettingsUI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ConverterSettingsForContentType;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListTemplateDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Unique;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UniqueSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SecurityBits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RootWebOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RootWebOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Catalog;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CatalogSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int DocumentTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DocumentTemplateSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DontSaveInTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DontSaveInTemplateSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AllowDeletion;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowDeletionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DisableAttachments;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DisableAttachmentsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TrueFalseMixed EnableModeration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableModerationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE HiddenList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenListSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Image;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE MustSaveRootFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MustSaveRootFilesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE OnQuickLaunch;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OnQuickLaunchSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE CacheSchema;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CacheSchemaSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE NoCrawl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NoCrawlSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AllowEveryoneViewItems;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowEveryoneViewItemsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AlwaysIncludeContent;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AlwaysIncludeContentSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SyncType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SetupPath;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public BaseType BaseType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BaseTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EditPage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FeatureId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FolderCreation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FolderCreationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE MultipleTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MultipleTypesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DisallowContentTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DisallowContentTypesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string NewPage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long Sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SequenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE VersioningEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VersioningEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ListTemplateCategoryType Category;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CategorySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE UseRootFolderForNavigation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UseRootFolderForNavigationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum BaseType {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0")]
    Item0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("5")]
    Item5,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3")]
    Item3,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4")]
    Item4,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum ListTemplateCategoryType {
    
    /// <remarks/>
    Libraries,
    
    /// <remarks/>
    Communications,
    
    /// <remarks/>
    Tracking,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Custom Lists")]
    CustomLists,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ContentTypeBindingDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ContentTypeId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ListUrl;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ReceiverDefinitionCollection {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Receiver")]
    public ReceiverDefinition[] Receiver;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ListTemplateId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ListTemplateIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ListTemplateOwner;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ReceiverDefinition {
    
    /// <remarks/>
    public string Name;
    
    /// <remarks/>
    public string Type;
    
    /// <remarks/>
    public string SequenceNumber;
    
    /// <remarks/>
    public string Assembly;
    
    /// <remarks/>
    public string Class;
    
    /// <remarks/>
    public string Data;
    
    /// <remarks/>
    public string Filter;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class HideCustomActionDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string HideActionId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string GroupId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class UserMigratorDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Assembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Class;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ModuleDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("File")]
    public FileDefinition[] File;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RootWebOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RootWebOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int List;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ListSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string IncludeFolders;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SetupPath;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FileDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("NavBarPage", typeof(NavBarPageDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("View", typeof(ViewWebPartDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("AllUsersWebPart", typeof(WebPartDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("Property", typeof(PropertyValueAttributeDefinition))]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE IgnoreIfAlreadyExists;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IgnoreIfAlreadyExistsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TrueFalseMixed NavBarHome;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NavBarHomeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FileGhostType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FileLevelType Level;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LevelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class NavBarPageDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Position;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IDSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ViewWebPartDefinition : WebPartDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AggregateView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AggregateViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int BaseViewID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BaseViewIDSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DefaultView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FailIfEmpty;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FailIfEmptySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FileDialog;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FileDialogSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FPModified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FPModifiedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FreeForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FreeFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string List;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE OrderedView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OrderedViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PageType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RecurrenceRowset;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RecurrenceRowsetSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int RowLimit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RowLimitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Scope;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowHeaderUI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowHeaderUISpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Threaded;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ThreadedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ViewPartType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum ViewPartType {
    
    /// <remarks/>
    HTML,
    
    /// <remarks/>
    Chart,
    
    /// <remarks/>
    Pivot,
    
    /// <remarks/>
    GANTT,
    
    /// <remarks/>
    CALENDAR,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewWebPartDefinition))]
public class WebPartDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int WebPartOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WebPartOrderSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string WebPartZoneID;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class PropertyValueAttributeDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value1;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum FileGhostType {
    
    /// <remarks/>
    Ghostable,
    
    /// <remarks/>
    GhostableInLibrary,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum FileLevelType {
    
    /// <remarks/>
    Draft,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ContentTypeDefinition {
    
    /// <remarks/>
    public CTFolderDefinition Folder;
    
    /// <remarks/>
    public CTFieldRefDefinitions FieldRefs;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Form", IsNullable=false)]
    public FormDefinition[] Forms;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("XmlDocument", IsNullable=false)]
    public XmlDocumentDefinition[] XmlDocuments;
    
    /// <remarks/>
    public ContentTypeDocumentTemplateDefinition DocumentTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string BaseType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Group;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("DocumentTemplate")]
    public string DocumentTemplate1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ResourceFolder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Sealed;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SealedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string V2ListTemplateName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long Version;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VersionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FeatureId;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CTFolderDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TargetName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CTFieldRefDefinitions {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DocumentTemplate", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("FieldRef", typeof(CTFieldRefDefinition))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveFieldRef", typeof(CTFieldRefDefinition))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType1[] ItemsElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CTFieldRefDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DefaultValue;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Format;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Filterable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FilterableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FilterableNoRecurrence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FilterableNoRecurrenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FromBaseType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FromBaseTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSEorResource Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Locked;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LockedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Node;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long NumLines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool NumLinesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnlyClient;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlyClientSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Required;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Sealed;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SealedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInDisplayForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInDisplayFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInEditForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInEditFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInFileDlg;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInFileDlgSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInListSettings;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInListSettingsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowInNewForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowInNewFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Sortable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SortableSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum TRUEFALSEorResource {
    
    /// <remarks/>
    TRUE,
    
    /// <remarks/>
    FALSE,
    
    /// <remarks/>
    @true,
    
    /// <remarks/>
    @false,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("$Resources:core,True_Unless_Jpn")]
    ResourcescoreTrue_Unless_Jpn,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/", IncludeInSchema=false)]
public enum ItemsChoiceType1 {
    
    /// <remarks/>
    DocumentTemplate,
    
    /// <remarks/>
    FieldRef,
    
    /// <remarks/>
    RemoveFieldRef,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FormDefinition {
    
    /// <remarks/>
    public CamlViewRoot ListFormOpening;
    
    /// <remarks/>
    public CamlViewRoot ListFormButtons;
    
    /// <remarks/>
    public CamlViewRoot ListFormBody;
    
    /// <remarks/>
    public CamlViewRoot ListFormClosing;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SetupPath;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public FormType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE UseLegacyForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UseLegacyFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Template;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string WebPartZoneID;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum FormType {
    
    /// <remarks/>
    DisplayForm,
    
    /// <remarks/>
    EditForm,
    
    /// <remarks/>
    NewForm,
    
    /// <remarks/>
    NewFormDialog,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("")]
    Item,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class XmlDocumentDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ContentTypeDocumentTemplateDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TargetName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListInstanceDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Data")]
    public DataDefinition[] Data;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FeatureId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE OnQuickLaunch;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OnQuickLaunchSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RootWebOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RootWebOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string QuickLaunchUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DocumentTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int TemplateType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TemplateTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class DataDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Row", IsNullable=false)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Field", IsNullable=false, NestingLevel=1)]
    public FieldDataDefinition[][] Rows;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FieldDataDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class CustomActionGroupDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SequenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sharepoint/", IsNullable=false)]
public class Solution {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("FeatureManifest", IsNullable=false)]
    public FeatureManifestReference[] FeatureManifests;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SiteDefinitionManifest", IsNullable=false)]
    public SiteDefinitionManifestFileReference[] SiteDefinitionManifests;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Assembly", IsNullable=false)]
    public AssemblyFileReference[] Assemblies;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("TemplateFile", IsNullable=false)]
    public TemplateFileReference[] TemplateFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("RootFile", IsNullable=false)]
    public RootFileReference[] RootFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ApplicationResourceFile", IsNullable=false)]
    public ApplicationResourceFileDefinition[] ApplicationResourceFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Resource", IsNullable=false)]
    public ResourceDefinition[] Resources;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DwpFile", IsNullable=false)]
    public DwpFileDefinition[] DwpFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PolicyItem", IsNullable=false)]
    public PolicyItemDefinition[] CodeAccessSecurity;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SolutionId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeploymentServerTypeAttr DeploymentServerType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DeploymentServerTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ResetWebServer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ResetWebServerSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FeatureManifestReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SiteDefinitionManifestFileReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WebTempFile")]
    public WebTempFileDefinition[] WebTempFile;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class WebTempFileDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class AssemblyFileReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SafeControl", IsNullable=false)]
    public SafeControlDefinition[] SafeControls;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ClassResource", IsNullable=false)]
    public ClassResourceDefinition[] ClassResources;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public SolutionDeploymentTargetType DeploymentTarget;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DeploymentTargetSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class SafeControlDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Assembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Namespace;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TypeName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TrueFalseMixed Safe;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SafeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ClassResourceDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FileName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum SolutionDeploymentTargetType {
    
    /// <remarks/>
    GlobalAssemblyCache,
    
    /// <remarks/>
    WebApplication,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class TemplateFileReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class RootFileReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ApplicationResourceFileDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ResourceDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class DwpFileDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FileName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class PolicyItemDefinition {
    
    /// <remarks/>
    public PermissionSetDefinition PermissionSet;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Assembly", IsNullable=false)]
    public PolicyAssemblyDefinition[] Assemblies;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class PermissionSetDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("IPermission")]
    public object[] IPermission;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PermssionSetClassAttr @class;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string version;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum PermssionSetClassAttr {
    
    /// <remarks/>
    NamedPermissionSet,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class PolicyAssemblyDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Version;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PublicKeyBlob;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum DeploymentServerTypeAttr {
    
    /// <remarks/>
    ApplicationServer,
    
    /// <remarks/>
    WebFrontEnd,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlRootAttribute("Project", Namespace="http://schemas.microsoft.com/sharepoint/", IsNullable=false)]
public class SiteDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NavBar", IsNullable=false)]
    public NavBarDefinition[] NavBars;
    
    /// <remarks/>
    public ListTemplateDefinitions ListTemplates;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DocumentTemplate", IsNullable=false)]
    public DocumentTemplateDefinition[] DocumentTemplates;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BaseType", IsNullable=false)]
    public BaseTypeDefinition[] BaseTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Configuration", IsNullable=false)]
    public ConfigurationDefinition[] Configurations;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Module", IsNullable=false)]
    public ModuleDefinition[] Modules;
    
    /// <remarks/>
    public ComponentsDefinition Components;
    
    /// <remarks/>
    public ServerEmailFooterDefinition ServerEmailFooter;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ListDir;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AlternateURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AlternateCSS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Revision;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RevisionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisableWebDesignFeatures;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class NavBarDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("NavBarLink")]
    public NavBarLinkDefinition[] NavBarLink;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Suffix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Separator;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Prefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Body;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IDSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class NavBarLinkDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListTemplateDefinitions {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ListTemplate")]
    public ListTemplateDefinition[] ListTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class DocumentTemplateDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DocumentTemplateFile", IsNullable=false)]
    public DocumentTemplateFileDefinition[] DocumentTemplateFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE XMLForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool XMLFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class DocumentTemplateFileDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TargetName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class BaseTypeDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MetaData")]
    public ListMetaDataDefinition[] MetaData;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Image;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public BaseType Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListMetaDataDefinition {
    
    /// <remarks/>
    public FieldDefinitions Fields;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Form", IsNullable=false)]
    public FormDefinition[] Forms;
    
    /// <remarks/>
    public ListMetaDataDefault Default;
    
    /// <remarks/>
    public string DefaultDescription;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("View", IsNullable=false)]
    public ViewDefinition[] Views;
    
    /// <remarks/>
    public ToolbarDefinition Toolbar;
    
    /// <remarks/>
    public ContentTypeReferences ContentTypes;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FieldDefinitions {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Field")]
    public FieldDefinition[] Field;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Revision;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RevisionSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListMetaDataDefault {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Form", IsNullable=false)]
    public FormDefinition[] Forms;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ViewDefinition {
    
    /// <remarks/>
    public CamlViewRoot PagedRowset;
    
    /// <remarks/>
    public ToolbarDefinition Toolbar;
    
    /// <remarks/>
    public CamlQueryRoot Query;
    
    /// <remarks/>
    public FieldRefDefinitions ViewFields;
    
    /// <remarks/>
    public CamlViewRoot GroupByHeader;
    
    /// <remarks/>
    public CamlViewRoot GroupByFooter;
    
    /// <remarks/>
    public CamlViewRoot ViewHeader;
    
    /// <remarks/>
    public CamlViewRoot ViewBody;
    
    /// <remarks/>
    public CamlViewRoot ViewFooter;
    
    /// <remarks/>
    public CamlViewRoot RowLimitExceeded;
    
    /// <remarks/>
    public CamlViewRoot ViewEmpty;
    
    /// <remarks/>
    public CamlViewRoot PagedRecurrenceRowset;
    
    /// <remarks/>
    public CamlViewRoot PagedClientCallbackRowset;
    
    /// <remarks/>
    public RowLimitDefinition RowLimit;
    
    /// <remarks/>
    public ViewStyleReference ViewStyle;
    
    /// <remarks/>
    public ViewDataFieldRefDefinitions ViewData;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE AggregateView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AggregateViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int BaseViewID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BaseViewIDSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DefaultView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DisplayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FailIfEmpty;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FailIfEmptySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FileDialog;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FileDialogSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FPModified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FPModifiedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int List;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ListSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ContentTypeID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE OrderedView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OrderedViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DefaultViewForContentType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultViewForContentTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE IncludeRootFolder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IncludeRootFolderSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PageType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Path;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReadOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReadOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RecurrenceRowset;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RecurrenceRowsetSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RequiresClientIntegration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RequiresClientIntegrationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("RowLimit")]
    public int RowLimit1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RowLimit1Specified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Scope;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ShowHeaderUI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShowHeaderUISpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Threaded;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ThreadedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int WebPartOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WebPartOrderSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string WebPartZoneID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FreeForm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FreeFormSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ImageUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SetupPath;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ModerationType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ToolbarTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE MobileView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MobileViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE MobileDefaultView;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MobileDefaultViewSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ReqAuth;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReqAuthSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ViewRegistrationType TargetType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TargetId;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class RowLimitDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Paged;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PagedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public int Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ViewStyleReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IDSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ViewDataFieldRefDefinitions {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FieldRef")]
    public ViewDataFieldRefDefinition[] FieldRef;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ViewDataFieldRefDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string[] Text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public enum ViewRegistrationType {
    
    /// <remarks/>
    List,
    
    /// <remarks/>
    ContentType,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ContentTypeReferences {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ContentTypeRef", typeof(ContentTypeReference))]
    [System.Xml.Serialization.XmlElementAttribute("ContentType", typeof(ContentTypeDefinition))]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ContentTypeReference {
    
    /// <remarks/>
    public FolderReference Folder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FolderReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string TargetName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ConfigurationDefinition {
    
    /// <remarks/>
    public ExecuteUrlDefinition ExecuteUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("List", IsNullable=false)]
    public ListInstance[] Lists;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Module", IsNullable=false)]
    public ModuleDefinition[] Modules;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Feature", IsNullable=false)]
    public FeatureTemplateReference[] WebFeatures;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Feature", IsNullable=false)]
    public FeatureTemplateReference[] SiteFeatures;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE Hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IDSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ImageUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string MasterUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CustomMasterUrl;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ExecuteUrlDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ListInstance {
    
    /// <remarks/>
    public DataDefinition Data;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string QuickLaunchUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string FeatureId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EmailAlias;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE VersioningEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VersioningEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE EnableMinorVersions;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableMinorVersionsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE EnableContentTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableContentTypesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ForceCheckout;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ForceCheckoutSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RootWebOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RootWebOnlySpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FeatureTemplateReference {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Property", IsNullable=false)]
    public FeaturePropertyDefinition[] Properties;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ComponentsDefinition {
    
    /// <remarks/>
    public ExternalSecurityProviderDefinition ExternalSecurityProvider;
    
    /// <remarks/>
    public FileDialogPostProcessorDefinition FileDialogPostProcessor;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ExternalSecurityProviderDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class FileDialogPostProcessorDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ID;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
public class ServerEmailFooterDefinition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/")]
[System.Xml.Serialization.XmlRootAttribute("List", Namespace="http://schemas.microsoft.com/sharepoint/", IsNullable=false)]
public class ListDefinition {
    
    /// <remarks/>
    public ListMetaDataDefinition MetaData;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Title;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long WebImageWidth;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WebImageWidthSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE EnableThumbnails;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableThumbnailsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE EnableContentTypes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableContentTypesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE FolderCreation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FolderCreationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE DisableAttachments;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DisableAttachmentsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EventSinkAssembly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EventSinkClass;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string EventSinkData;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE OrderedList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OrderedListSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE PrivateList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PrivateListSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string QuickLaunchUrl;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE RootWebOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RootWebOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ModeratedList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ModeratedListSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int DraftVersionVisibility;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DraftVersionVisibilitySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int ThumbnailSize;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ThumbnailSizeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int DefaultItemOpen;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultItemOpenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE VersioningEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VersioningEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE EnableMinorVersions;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnableMinorVersionsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE ModerationType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ModerationTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int Type;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TRUEFALSE URLEncode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool URLEncodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public long WebImageHeight;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WebImageHeightSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int BaseType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BaseTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Direction;
}
